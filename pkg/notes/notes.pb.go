// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notes.proto

package notes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Query struct {
	IDs                  []string             `protobuf:"bytes,1,rep,name=IDs,proto3" json:"IDs,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Team                 string               `protobuf:"bytes,3,opt,name=team,proto3" json:"team,omitempty"`
	Authors              []string             `protobuf:"bytes,4,rep,name=authors,proto3" json:"authors,omitempty"`
	Todate               *timestamp.Timestamp `protobuf:"bytes,5,opt,name=todate,proto3" json:"todate,omitempty"`
	Fromdate             *timestamp.Timestamp `protobuf:"bytes,6,opt,name=fromdate,proto3" json:"fromdate,omitempty"`
	Tags                 []string             `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_notes_fcc37006804c8e30, []int{0}
}
func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (dst *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(dst, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetIDs() []string {
	if m != nil {
		return m.IDs
	}
	return nil
}

func (m *Query) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Query) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *Query) GetAuthors() []string {
	if m != nil {
		return m.Authors
	}
	return nil
}

func (m *Query) GetTodate() *timestamp.Timestamp {
	if m != nil {
		return m.Todate
	}
	return nil
}

func (m *Query) GetFromdate() *timestamp.Timestamp {
	if m != nil {
		return m.Fromdate
	}
	return nil
}

func (m *Query) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type NoteList struct {
	Notes                []*Note  `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoteList) Reset()         { *m = NoteList{} }
func (m *NoteList) String() string { return proto.CompactTextString(m) }
func (*NoteList) ProtoMessage()    {}
func (*NoteList) Descriptor() ([]byte, []int) {
	return fileDescriptor_notes_fcc37006804c8e30, []int{1}
}
func (m *NoteList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoteList.Unmarshal(m, b)
}
func (m *NoteList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoteList.Marshal(b, m, deterministic)
}
func (dst *NoteList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoteList.Merge(dst, src)
}
func (m *NoteList) XXX_Size() int {
	return xxx_messageInfo_NoteList.Size(m)
}
func (m *NoteList) XXX_DiscardUnknown() {
	xxx_messageInfo_NoteList.DiscardUnknown(m)
}

var xxx_messageInfo_NoteList proto.InternalMessageInfo

func (m *NoteList) GetNotes() []*Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

type Tag struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Color                string   `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_notes_fcc37006804c8e30, []int{2}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (dst *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(dst, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Tag) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

type Note struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Author               string               `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Team                 string               `protobuf:"bytes,4,opt,name=team,proto3" json:"team,omitempty"`
	Body                 string               `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Type                 string               `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	DateCreated          *timestamp.Timestamp `protobuf:"bytes,7,opt,name=dateCreated,proto3" json:"dateCreated,omitempty"`
	DateModified         *timestamp.Timestamp `protobuf:"bytes,8,opt,name=dateModified,proto3" json:"dateModified,omitempty"`
	Link                 string               `protobuf:"bytes,9,opt,name=link,proto3" json:"link,omitempty"`
	Image                []byte               `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`
	Tags                 []*Tag               `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	Score                float32              `protobuf:"fixed32,12,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Note) Reset()         { *m = Note{} }
func (m *Note) String() string { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()    {}
func (*Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_notes_fcc37006804c8e30, []int{3}
}
func (m *Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Note.Unmarshal(m, b)
}
func (m *Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Note.Marshal(b, m, deterministic)
}
func (dst *Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Note.Merge(dst, src)
}
func (m *Note) XXX_Size() int {
	return xxx_messageInfo_Note.Size(m)
}
func (m *Note) XXX_DiscardUnknown() {
	xxx_messageInfo_Note.DiscardUnknown(m)
}

var xxx_messageInfo_Note proto.InternalMessageInfo

func (m *Note) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Note) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Note) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Note) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *Note) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Note) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Note) GetDateCreated() *timestamp.Timestamp {
	if m != nil {
		return m.DateCreated
	}
	return nil
}

func (m *Note) GetDateModified() *timestamp.Timestamp {
	if m != nil {
		return m.DateModified
	}
	return nil
}

func (m *Note) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Note) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Note) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Note) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_notes_fcc37006804c8e30, []int{4}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Query)(nil), "notes.Query")
	proto.RegisterType((*NoteList)(nil), "notes.NoteList")
	proto.RegisterType((*Tag)(nil), "notes.Tag")
	proto.RegisterType((*Note)(nil), "notes.Note")
	proto.RegisterType((*Empty)(nil), "notes.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotesClient is the client API for Notes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotesClient interface {
	CreateNote(ctx context.Context, in *Note, opts ...grpc.CallOption) (*Note, error)
	DeleteNote(ctx context.Context, in *Note, opts ...grpc.CallOption) (*Note, error)
	UpdateNote(ctx context.Context, in *Note, opts ...grpc.CallOption) (*Note, error)
	GetNotes(ctx context.Context, in *Query, opts ...grpc.CallOption) (*NoteList, error)
}

type notesClient struct {
	cc *grpc.ClientConn
}

func NewNotesClient(cc *grpc.ClientConn) NotesClient {
	return &notesClient{cc}
}

func (c *notesClient) CreateNote(ctx context.Context, in *Note, opts ...grpc.CallOption) (*Note, error) {
	out := new(Note)
	err := c.cc.Invoke(ctx, "/notes.Notes/createNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notesClient) DeleteNote(ctx context.Context, in *Note, opts ...grpc.CallOption) (*Note, error) {
	out := new(Note)
	err := c.cc.Invoke(ctx, "/notes.Notes/deleteNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notesClient) UpdateNote(ctx context.Context, in *Note, opts ...grpc.CallOption) (*Note, error) {
	out := new(Note)
	err := c.cc.Invoke(ctx, "/notes.Notes/updateNote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notesClient) GetNotes(ctx context.Context, in *Query, opts ...grpc.CallOption) (*NoteList, error) {
	out := new(NoteList)
	err := c.cc.Invoke(ctx, "/notes.Notes/getNotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotesServer is the server API for Notes service.
type NotesServer interface {
	CreateNote(context.Context, *Note) (*Note, error)
	DeleteNote(context.Context, *Note) (*Note, error)
	UpdateNote(context.Context, *Note) (*Note, error)
	GetNotes(context.Context, *Query) (*NoteList, error)
}

func RegisterNotesServer(s *grpc.Server, srv NotesServer) {
	s.RegisterService(&_Notes_serviceDesc, srv)
}

func _Notes_CreateNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Note)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotesServer).CreateNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notes.Notes/CreateNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotesServer).CreateNote(ctx, req.(*Note))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notes_DeleteNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Note)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotesServer).DeleteNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notes.Notes/DeleteNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotesServer).DeleteNote(ctx, req.(*Note))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notes_UpdateNote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Note)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotesServer).UpdateNote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notes.Notes/UpdateNote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotesServer).UpdateNote(ctx, req.(*Note))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notes_GetNotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotesServer).GetNotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notes.Notes/GetNotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotesServer).GetNotes(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

var _Notes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "notes.Notes",
	HandlerType: (*NotesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createNote",
			Handler:    _Notes_CreateNote_Handler,
		},
		{
			MethodName: "deleteNote",
			Handler:    _Notes_DeleteNote_Handler,
		},
		{
			MethodName: "updateNote",
			Handler:    _Notes_UpdateNote_Handler,
		},
		{
			MethodName: "getNotes",
			Handler:    _Notes_GetNotes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notes.proto",
}

func init() { proto.RegisterFile("notes.proto", fileDescriptor_notes_fcc37006804c8e30) }

var fileDescriptor_notes_fcc37006804c8e30 = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcd, 0xaa, 0xd4, 0x40,
	0x10, 0x85, 0x49, 0x26, 0x99, 0x9f, 0xca, 0xa0, 0xd2, 0x88, 0x34, 0xb3, 0xd0, 0x98, 0x85, 0xc4,
	0x85, 0xb9, 0x30, 0x82, 0x2b, 0x71, 0xa3, 0x2e, 0x04, 0x15, 0x0c, 0xf3, 0x02, 0x3d, 0xd3, 0x35,
	0xb1, 0x31, 0xb9, 0x1d, 0x92, 0x1a, 0xb8, 0x79, 0x25, 0xdf, 0x49, 0x9f, 0x45, 0xba, 0x3a, 0xb9,
	0xc4, 0x85, 0x8c, 0xbb, 0x3a, 0xdd, 0xa7, 0x9a, 0x53, 0x5f, 0x25, 0x90, 0xdc, 0x5a, 0xc2, 0xbe,
	0x68, 0x3b, 0x4b, 0x56, 0xc4, 0x2c, 0x76, 0xcf, 0x2a, 0x6b, 0xab, 0x1a, 0x6f, 0xf8, 0xf0, 0x78,
	0x39, 0xdf, 0x90, 0x69, 0xb0, 0x27, 0xd5, 0xb4, 0xde, 0x97, 0xfd, 0x0a, 0x20, 0xfe, 0x76, 0xc1,
	0x6e, 0x10, 0x8f, 0x60, 0xf1, 0xe9, 0x43, 0x2f, 0x83, 0x74, 0x91, 0x6f, 0x4a, 0x57, 0x8a, 0xc7,
	0x10, 0x93, 0xa1, 0x1a, 0x65, 0x98, 0x06, 0xf9, 0xa6, 0xf4, 0x42, 0x08, 0x88, 0x08, 0x55, 0x23,
	0x17, 0x7c, 0xc8, 0xb5, 0x90, 0xb0, 0x52, 0x17, 0xfa, 0x6e, 0xbb, 0x5e, 0x46, 0xdc, 0x3f, 0x49,
	0xb1, 0x87, 0x25, 0x59, 0xad, 0x08, 0x65, 0x9c, 0x06, 0x79, 0xb2, 0xdf, 0x15, 0x3e, 0x51, 0x31,
	0x25, 0x2a, 0x0e, 0x53, 0xa2, 0x72, 0x74, 0x8a, 0x37, 0xb0, 0x3e, 0x77, 0xb6, 0xe1, 0xae, 0xe5,
	0xd5, 0xae, 0x7b, 0x2f, 0x27, 0x53, 0x55, 0x2f, 0x57, 0x1c, 0x81, 0xeb, 0xec, 0x15, 0xac, 0xbf,
	0x5a, 0xc2, 0xcf, 0xa6, 0x27, 0xf1, 0x1c, 0x3c, 0x15, 0x9e, 0x31, 0xd9, 0x27, 0x85, 0x07, 0xe6,
	0xee, 0x4b, 0x7f, 0x93, 0xdd, 0xc0, 0xe2, 0xa0, 0x2a, 0x3f, 0xe3, 0x1d, 0xc9, 0x60, 0x9a, 0xf1,
	0x8e, 0x1c, 0x8d, 0x93, 0xad, 0x6d, 0x37, 0xd1, 0x60, 0x91, 0xfd, 0x0e, 0x21, 0x72, 0x0f, 0x88,
	0x07, 0x10, 0x1a, 0x3d, 0x36, 0x84, 0x46, 0xff, 0x03, 0xde, 0x13, 0x58, 0x7a, 0x32, 0x23, 0xbe,
	0x51, 0xdd, 0x43, 0x8d, 0x66, 0x50, 0x05, 0x44, 0x47, 0xab, 0x07, 0x06, 0xb7, 0x29, 0xb9, 0x66,
	0xdf, 0xd0, 0x7a, 0x2c, 0xce, 0x37, 0xb4, 0x28, 0xde, 0x42, 0xe2, 0xc6, 0x7f, 0xdf, 0xa1, 0x22,
	0xd4, 0x72, 0x75, 0x95, 0xd8, 0xdc, 0x2e, 0xde, 0xc1, 0xd6, 0xc9, 0x2f, 0x56, 0x9b, 0xb3, 0x41,
	0x2d, 0xd7, 0x57, 0xdb, 0xff, 0xf2, 0xbb, 0x44, 0xb5, 0xb9, 0xfd, 0x21, 0x37, 0x3e, 0x91, 0xab,
	0xdd, 0xec, 0xa6, 0x51, 0x15, 0x4a, 0x48, 0x83, 0x7c, 0x5b, 0x7a, 0x21, 0x9e, 0x8e, 0xeb, 0x49,
	0x98, 0x3e, 0x8c, 0xf4, 0x0f, 0xaa, 0xf2, 0xab, 0x72, 0x5d, 0xfd, 0xc9, 0x76, 0x28, 0xb7, 0x69,
	0x90, 0x87, 0xa5, 0x17, 0xd9, 0x0a, 0xe2, 0x8f, 0x4d, 0x4b, 0xc3, 0xfe, 0x67, 0x00, 0xb1, 0x23,
	0xdd, 0x8b, 0x17, 0x00, 0x27, 0x4e, 0xcf, 0xe0, 0xe7, 0x6b, 0xdc, 0xcd, 0x85, 0xf3, 0x69, 0xac,
	0xf1, 0x7f, 0x7c, 0x97, 0x56, 0x5f, 0x7f, 0xef, 0x25, 0xac, 0x2b, 0x24, 0x9f, 0x61, 0x3b, 0x5e,
	0xf0, 0xbf, 0xb3, 0x7b, 0x38, 0xb3, 0xb9, 0x4f, 0xed, 0xb8, 0x64, 0x6e, 0xaf, 0xff, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x89, 0x2c, 0xed, 0x73, 0x94, 0x03, 0x00, 0x00,
}
